name: Continuous Integration and Delivery
on: [ push, pull_request ]
env:
  NODE_VERSION: 16.14.0
jobs:
  install:
    name: 'Installing NPM modules'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Caching NPM modules if necessary'
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci
  lint:
    name: 'Linting'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run lint
  build-libs:
    name: 'Building Libs'
    needs: install
    runs-on: ubuntu-latest
    outputs:
      workbench-version: ${{ steps.workbench-package-json.outputs.version }}
      workbench-client-version: ${{ steps.workbench-client-package-json.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Reading package.json version of scion/workbench'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/package-json@master
        id: workbench-package-json
        with:
          path: projects/scion/workbench/package.json
      - name: 'Reading package.json version of scion/workbench-client'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/package-json@master
        id: workbench-client-package-json
        with:
          path: projects/scion/workbench-client/package.json
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Building @scion/workbench-client'
        run: npm run workbench-client:build
      - name: 'Uploading dist/scion/workbench-client'
        uses: actions/upload-artifact@v2
        with:
          name: workbench-client-dist
          path: dist/scion/workbench-client
      - name: 'Building @scion/workbench'
        run: npm run workbench:build
      - name: 'Uploading dist/scion/workbench'
        uses: actions/upload-artifact@v2
        with:
          name: workbench-dist
          path: dist/scion/workbench
      - name: 'Building TypeDoc for @scion/workbench-client'
        run: npm run workbench-client:typedoc
      - name: 'Uploading dist/workbench-client-api'
        uses: actions/upload-artifact@v2
        with:
          name: workbench-client-api
          path: dist/workbench-client-api
  build-apps:
    name: 'Building Apps'
    needs: build-libs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - name: workbench-testing-app-ci
            cmd: npm run workbench-testing-app:ci:build
          - name: workbench-testing-app-vercel
            cmd: npm run workbench-testing-app:vercel:build
          - name: workbench-client-testing-app-ci
            cmd: npm run workbench-client-testing-app:ci:build
          - name: workbench-client-testing-app-vercel
            cmd: npm run workbench-client-testing-app:vercel:build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Downloading dist/scion/workbench'
        uses: actions/download-artifact@v2
        with:
          name: workbench-dist
          path: dist/scion/workbench
      - name: 'Downloading dist/scion/workbench-client'
        uses: actions/download-artifact@v2
        with:
          name: workbench-client-dist
          path: dist/scion/workbench-client
      - name: 'Building ${{ matrix.app.name }}'
        run: ${{ matrix.app.cmd }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.app.name }}
          path: dist/${{ matrix.app.name }}
  test:
    name: 'Unit Testing'
    needs: build-libs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Downloading dist/scion/workbench'
        uses: actions/download-artifact@v2
        with:
          name: workbench-dist
          path: dist/scion/workbench
      - name: 'Downloading dist/scion/workbench-client'
        uses: actions/download-artifact@v2
        with:
          name: workbench-client-dist
          path: dist/scion/workbench-client
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run test:headless
  e2e:
    name: 'E2E Testing'
    needs: [ build-libs, build-apps ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite:
          - name: startup
            project: workbench
          - name: router
            project: workbench
          - name: routerlink
            project: workbench
          - name: default-page
            project: workbench
          - name: viewpart-action
            project: workbench
          - name: view-tabbar
            project: workbench
          - name: view
            project: workbench
          - name: popup
            project: workbench
          - name: popup-size
            project: workbench
          - name: message-box
            project: workbench
          - name: notification
            project: workbench
          - name: router
            project: workbench-client
          - name: router-params
            project: workbench-client
          - name: view
            project: workbench-client
          - name: popup
            project: workbench-client
          - name: popup-params
            project: workbench-client
          - name: popup-router
            project: workbench-client
          - name: host-popup
            project: workbench-client
          - name: popup-size
            project: workbench-client
          - name: message-box
            project: workbench-client
          - name: notification
            project: workbench-client
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Downloading dist/scion/workbench'
        uses: actions/download-artifact@v2
        with:
          name: workbench-dist
          path: dist/scion/workbench
      - name: 'Downloading dist/scion/workbench-client'
        uses: actions/download-artifact@v2
        with:
          name: workbench-client-dist
          path: dist/scion/workbench-client
      - name: 'Downloading app: workbench-testing-app-ci (dist)'
        uses: actions/download-artifact@v2
        with:
          name: workbench-testing-app-ci
          path: dist/workbench-testing-app-ci
      - name: 'Downloading app: workbench-client-testing-app-ci (dist)'
        uses: actions/download-artifact@v2
        with:
          name: workbench-client-testing-app-ci
          path: dist/workbench-client-testing-app-ci
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run e2e-testing:e2e-ci -- --suite ${{ matrix.suite.project }}::${{ matrix.suite.name }}
  workbench-release-guard:
    name: 'Should release @scion/workbench?'
    if: github.ref == 'refs/heads/master'
    needs:
      - build-libs
      - build-apps
      - lint
      - test
      - e2e
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.tag-release-commit.outputs.is-release-commit }}
    steps:
      - uses: actions/checkout@v2
      - name: 'If release commit present, add release tag'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/tag-release-commit@master
        id: tag-release-commit
        with:
          release-commit-message-pattern: 'release\(workbench\): v(.*)'
          expected-version: ${{ needs.build-libs.outputs.workbench-version }}
  workbench-client-release-guard:
    name: 'Should release @scion/workbench-client?'
    if: github.ref == 'refs/heads/master'
    needs:
      - build-libs
      - build-apps
      - lint
      - test
      - e2e
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.tag-release-commit.outputs.is-release-commit }}
    steps:
      - uses: actions/checkout@v2
      - name: 'If release commit present, add release tag'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/tag-release-commit@master
        id: tag-release-commit
        with:
          release-commit-message-pattern: 'release\(workbench-client\): v(.*)'
          expected-version: ${{ needs.build-libs.outputs.workbench-client-version }}
          git-tag: workbench-client-%v
  release-testing-app:
    name: 'Releasing testing app'
    if: ${{ needs.workbench-release-guard.outputs.should-release == 'true' || needs.workbench-client-release-guard.outputs.should-release == 'true' }}
    needs: [ workbench-release-guard, workbench-client-release-guard ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Downloading app: workbench-testing-app-vercel (dist)'
        uses: actions/download-artifact@v2
        with:
          name: workbench-testing-app-vercel
          path: dist/workbench-testing-app-vercel
      - name: 'Downloading app: workbench-client-testing-app-vercel (dist)'
        uses: actions/download-artifact@v2
        with:
          name: workbench-client-testing-app-vercel
          path: dist/workbench-client-testing-app-vercel
      - name: 'Deploying workbench-testing-app to Vercel'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/vercel-deploy@master
        with:
          dist-folder: dist/workbench-testing-app-vercel
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          org-id: ${{ secrets.VERCEL_ORG_ID }}
          project-id: ${{ secrets.VERCEL_WORKBENCH_TESTING_APP_PROJECT_ID }}
          aliases: scion-workbench-testing-app.vercel.app
      - name: 'Deploying workbench-client-testing-app to Vercel'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/vercel-deploy@master
        with:
          dist-folder: dist/workbench-client-testing-app-vercel
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          org-id: ${{ secrets.VERCEL_ORG_ID }}
          project-id: ${{ secrets.VERCEL_WORKBENCH_CLIENT_TESTING_APP_PROJECT_ID }}
          aliases: |
            scion-workbench-client-testing-app1.vercel.app,
            scion-workbench-client-testing-app2.vercel.app,
  release-workbench:
    name: 'Releasing @scion/workbench'
    if: ${{ needs.workbench-release-guard.outputs.should-release == 'true' }}
    needs: [ workbench-release-guard, build-libs, release-testing-app ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Downloading dist/scion/workbench'
        uses: actions/download-artifact@v2
        with:
          name: workbench-dist
          path: dist/scion/workbench
      - name: 'Publishing @scion/workbench to NPM'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/npm-publish@master
        with:
          dist-folder: dist/scion/workbench
          npm-token: ${{ secrets.NPM_TOKEN }}
          dry-run: false
  release-workbench-client:
    name: 'Releasing @scion/workbench-client'
    if: ${{ needs.workbench-client-release-guard.outputs.should-release == 'true' }}
    needs: [ workbench-client-release-guard, build-libs, release-testing-app ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Downloading dist/scion/workbench-client'
        uses: actions/download-artifact@v2
        with:
          name: workbench-client-dist
          path: dist/scion/workbench-client
      - name: 'Downloading dist/workbench-client-api'
        uses: actions/download-artifact@v2
        with:
          name: workbench-client-api
          path: dist/workbench-client-api
      - name: 'Deploying API Documentation (TypeDoc) to Vercel'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/vercel-deploy@master
        with:
          dist-folder: dist/workbench-client-api
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          org-id: ${{ secrets.VERCEL_ORG_ID }}
          project-id: ${{ secrets.VERCEL_WORKBENCH_CLIENT_API_PROJECT_ID }}
          version: ${{ needs.build-libs.outputs.workbench-client-version }}
          aliases: |
            scion-workbench-client-api.vercel.app,
            scion-workbench-client-api-v%v.vercel.app
      - name: 'Publishing @scion/workbench-client to NPM'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/npm-publish@master
        with:
          dist-folder: dist/scion/workbench-client
          npm-token: ${{ secrets.NPM_TOKEN }}
          dry-run: false

