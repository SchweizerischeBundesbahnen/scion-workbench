@use '../../../../design/workbench-constants';

/**
 * IMPORTANT: THIS CSS FILE IS ALSO USED BY `ViewTabDragImageComponent`
 */

:host {
  display: grid;
  align-items: center;
  padding-left: var(--sci-workbench-tab-padding-inline);
  padding-right: var(--sci-workbench-tab-padding-inline);
  position: relative; // positioning context
  user-select: none;
  cursor: pointer;
  box-sizing: border-box;
  outline: none;
  border-top: 1px solid transparent;
  border-left: 1px solid transparent;
  border-right: 1px solid transparent;
  border-top-left-radius: var(--sci-workbench-tab-border-radius);
  border-top-right-radius: var(--sci-workbench-tab-border-radius);

  &.active {
    cursor: default;
    color: var(--sci-workbench-tab-active-text-color);
    border-left-color: var(--sci-workbench-tab-border-color);
    border-right-color: var(--sci-workbench-tab-border-color);
    border-top-color: var(--sci-workbench-tab-border-color);
    background-color: var(--sci-workbench-view-background-color);

    wb-workbench:has(wb-main-area-layout) wb-part:not(.main-area) & {
      background-color: var(--sci-workbench-view-peripheral-background-color);
    }

    &.part-active > div.content {
      color: var(--sci-workbench-part-active-tab-active-text-color);
    }
  }

  > div.content {
    min-width: var(--sci-workbench-tab-min-width);
    max-width: var(--sci-workbench-tab-max-width);
    isolation: isolate; // stacking context to overlay the positioned 'hover' overlay
  }

  > button.close {
    all: unset;
    position: absolute;
    cursor: pointer;
    visibility: hidden;
    padding: .125em;
    border-radius: var(--sci-corner-small);
    right: .2em;

    &:not(:hover) {
      opacity: .75;
    }
  }

  &.active, &:hover:not(.drag-over-tabbar) {
    > button.close {
      visibility: visible;
    }
  }

  &.active > button.close:hover {
    background-color: var(--sci-workbench-tab-hover-background-color);
  }

  // Indicator when hovering the tab
  &:hover:not(.active):not(.drag-over-tabbar):before {
    content: '';
    background-color: var(--sci-workbench-tab-hover-background-color);
    position: absolute;
    inset: 0 0 .125em .125em;
    border-radius: var(--sci-workbench-tab-border-radius);
    pointer-events: none;
  }

  > div.corner-radius {
    height: var(--sci-workbench-tab-border-radius);
    width: var(--sci-workbench-tab-border-radius);
    overflow: hidden;
    position: absolute;
    bottom: 0;

    > div.circle {
      position: absolute;
      top: calc(-2 * var(--sci-workbench-tab-border-radius));
      width: calc(2 * var(--sci-workbench-tab-border-radius));
      height: calc(2 * var(--sci-workbench-tab-border-radius));
      border: var(--sci-workbench-tab-border-radius) solid var(--sci-workbench-view-background-color);
      border-radius: 50%;
      box-shadow: inset 0 0 0 1px var(--sci-workbench-tab-border-color);
      box-sizing: content-box;

      wb-workbench:has(wb-main-area-layout) wb-part:not(.main-area) & {
        border-color: var(--sci-workbench-view-peripheral-background-color);
      }
    }

    &.start {
      left: calc(-1 * var(--sci-workbench-tab-border-radius));

      > div.circle {
        left: calc(-2 * var(--sci-workbench-tab-border-radius));
      }
    }

    &.end {
      right: calc(-1 * var(--sci-workbench-tab-border-radius));

      > div.circle {
        right: calc(-2 * var(--sci-workbench-tab-border-radius));
      }
    }
  }

  // @formatter:off - Disable formatting because IntelliJ adds a space between number and unit, making the condition invalid.
  @container viewtab (height >= #{workbench-constants.$viewtab-multiline-breakpoint}) {
    > button.close {
      align-self: start;
      top: .125em;
      right: .125em;
    }
  }
  // @formatter:on
}
