@function primaryColor($opacity: 1) {
  @return rgba(55, 95, 156, $opacity);
}

@function accentColor($opacity: 1) {
  @return rgba(85, 85, 85, $opacity);
}

@function errorColor($opacity: 1) {
  @return rgba(255, 55, 55, $opacity);
}

/**
 * IE does not support align-items on grid containers. Therefore, we use align-self on child elements instead.
 */
@mixin grid-container-align-items($align) {
  > * {
    align-self: $align;
  }
}

/**
 * Installs the application theme.
 */
@mixin app-theme() {
  @import url('https://fonts.googleapis.com/css?family=Roboto:normal,bold,italic,bolditalic|Roboto+Mono');
  @import url('https://fonts.googleapis.com/icon?family=Material+Icons');

  body {
    font-family: Roboto, Arial, sans-serif;
    font-size: .9em;
    box-sizing: border-box;

    input, textarea, select {
      @include input-field;
    }

    a {
      @include link;
    }

    button.material-icons {
      @include mat-icon-button;
    }

    button:not(.material-icons) {
      @include button;
    }
  }
}

@function app-padding() {
  @return 1em;
}

@mixin position($position, $top, $right, $bottom, $left) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

/**
 * Provides the styling for a panel with HTML button elements.
 */
@mixin button-bar() {
  display: flex;
  justify-content: flex-end;
  border-top: 1px solid rgba(50, 50, 50, .3);
  background-color: rgba(50, 50, 50, .075);
  margin-top: 1em;
  padding: .5em 1em;

  > button {
    @include button();

    &:not(:first-child) {
      margin-left: .2em;
    }

    &:not(:last-child) {
      margin-right: .2em;
    }
  }
}

/**
 * Provides the styling for a Material icon button.
 */
@mixin mat-icon-button() {
  background-color: transparent;
  border: none;
  cursor: pointer;
  outline: none;
  color: inherit;
  padding: 0 0 0 .25em;
  user-select: none;

  &:focus, &:hover {
    color: primaryColor();
  }
}

/**
 * Provides the styling for a button.
 */
@mixin button() {
  cursor: pointer;
  padding: .5em 1.5em;
  font-family: inherit;
  color: rgba(51, 51, 51, .8);
  border: 1px solid rgba(51, 51, 51, .5);
  border-radius: 3px;
  background-color: rgb(255, 255, 255);
  transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;

  &:focus, &:active {
    border-color: primaryColor();
    color: primaryColor();
    outline: 0;
    box-shadow: 0 0 8px 0 primaryColor(.35);
  }

  &:disabled {
    color: rgba(51, 51, 51, .5);
    border-style: dotted;
    cursor: auto;
  }
}

/**
 * Provides the styling for an input field.
 */
@mixin input-field($radius: 2px) {
  border: 1px solid accentColor(.25);
  border-radius: $radius;
  padding: .5em;
  outline: 0;
  font-family: inherit;
  font-size: inherit;

  &:focus-within {
    border-color: primaryColor();
    box-shadow: 0 0 6px 0 primaryColor(.35);
  }

  &.inline-editable:not(.ng-invalid) {
    &:not(:focus-within):not(:hover):not(:active) {
      border: 1px solid transparent;
    }

    &:hover:not(:active):not(:focus-within) {
      cursor: pointer;
    }
  }

  &.ng-invalid.ng-touched {
    border-color: errorColor(1);
    box-shadow: 0 0 6px 0 errorColor(.35);
  }

  &[readonly] {
    color: accentColor(.5);
  }

  &[type="checkbox"] {
    margin: .75em 0;
  }
}

@mixin chip($border-color, $background-color, $color, $borderStyle: solid) {
  border: 1px $borderStyle $border-color;
  background-color: $background-color;
  color: $color;
  border-radius: 3px;
  padding: .25em .5em;
  font-size: smaller;
  user-select: none;
  margin-bottom: .25em;
  &:not(:last-child) {
    margin-right: .25em;
  }
}

/**
 * Provides the styling for a link.
 */
@mixin link($radius: 2px) {
  color: rgb(55, 95, 156);
  text-decoration: none;
  outline: none;

  &:hover, &:focus {
    text-decoration: underline;
  }
}
